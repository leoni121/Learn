** 浏览器内核
    谷歌：Webkit–>blink(现在是blink啦)
    FireFox：Gecko
    safari：webkit
    opera: presto -> blink
    IE:Trident


** <ul> <li> </li> </ul>
   <ol> <li> </li> </ol>
   <dl><dt></dt><dd></dd></dl>
   <table> <tr> <td></td> </tr> </table>


** 哪一个不是浏览器默认的天生inline-block标签（拥有内在尺寸，可设置高宽，不会自动换行）
    label
    常见的行块级元素(拥有内在尺寸，可设置高宽，不会自动换行 )有：(button,input，textarea,select), img等
    label元素不会是浏览器默认的行块级元素，实践出真知.手动设置label的display属性为inline-block，才能实现可设置高宽，不会自动换行的效果


** 数据库事务的4个特征是：原子性、一致性、持续性、隔离性。


** 在 HTML5 中，哪个方法用于获得用户的当前位置？
    getCurrentPosition


** 在前端数据访问过程中，由于同源策略的限制，往往会遇到一些跨域的问题，以下哪些手段可以解决跨域的问题
    利用HTML5 postMessage
    利用document.domain+iframe的设置
    通过服务端niginx配置跨域
    利用iframe+location.hash
    windows,name实现跨域数据传输


** html5的新的表单元素
    datalist
    keygen
    output


** setTimeout
    不是JS提供的，是浏览器（宿主环境）,window.setTimeout


** 浏览器 Browser 对象
    history  Location   navigator   screen


** undefined和null与任何有意义的值比较返回的都是false，但是null与undefined之间互相比较返回的是true。
    console.log(null == false); false
    console.log(null == true); false
    console.log(undefined == false); false
    console.log(undefined == true); false
    console.log(undefined == null); true
    console.log(undefined == undefined); true
    console.log(null == null); true


** 请问何为混合应用 (Hybrid APP) ，与原生 Native 应用相比它的优劣势。 ———— https://www.cnblogs.com/huanghundaxia/p/5734209.html
    （1）原生应用
        你使用过微软PowerPoint 或者Word吧？这些可直接在你电脑上运行或者在智能手机上运行，简单来说，原生应用是特别为某种操作系统开发的，比如iOS、Android、黑莓等等，它们是在各自的移动设备上运行的。
        优点：
            可访问手机所有功能（GPS、摄像头）；
            速度更快、性能高、整体用户体验不错；
            可线下使用（因为是在跟Web相对地平台上使用的）；
            支持大量图形和动画; 容易发现（在App Store里面）和重新发现（应用图标会一直在主页上）；
            应用下载能创造盈利（当然App Store抽取20-30% 的营收）。
        缺点：
            开发成本高；
            支持设备非常有限（一般是哪个系统就在哪个平台专属设备上用）；
            上线时间不确定（App Store审核过程不一）；
            内容限制（App Store限制）；
            获得新版本时需重新下载应用更新。
            举例：Yellow Pages Group 就开发了是几个版本（iOS、黑莓、Android），他们在每一个原生应用市场都有上架。

    （2）混合应用
        混合应用大家都知道是原生应用和Web应用的结合体，采用了原生应用的一部分、Web应用的一部分，所以必须在部分在设备上运行、部分在Web上运行。
        不过混合应用中比例很自由，比如Web 占90%，原生占10%；或者各占50%。
        优点：
            兼容多平台；
            顺利访问手机的多种功能；
            App Store中可下载（Wen应用套用原生应用的外壳）；
            可线下使用。
        缺点：
            不确定上线时间；
            用户体验不如本地应用；
            性能稍慢（需要连接网络）；
            技术还不是很成熟。
            比如Facebook现在的应用属于混合应用它可以在许多App Store畅通无阻，但是掺杂了大量Web特性，所以它运行速度比较慢，而现在为了提高性能FB又决定采用原生应用。

    （3）web应用
        Web应用本质上是为移动浏览器设计的基于Web的应用，它们是用普通Web开发语言开发的，可以在各种智能手机浏览器上运行。
        优点：
            支持设备广泛；
            较低的开发成本；
            可即时上线；
            无内容限制
            用户可以直接使用最新版本（自动更新，不需用户手动更新）。
        缺点：
            表现略差（对联网的要求比较大）；
            用户体验没那么炫；
            图片和动画支持性不高；
            没法在App Store中下载、无法通过应用下载获得盈利机会；
            要求联网；
            对手机特点有限制（摄像头、GPS等）。



** var object = {
    b: { c: 4 }, d: [{ e: 5 }, { e: 6 }]
   };
   console.log( parse(object, ‘b.c’) == 4 ) //true
   console.log( parse(object, ‘d[0].e’) == 5 ) //true
   console.log( parse(object, ‘d.0.e’) == 5 ) //true
   console.log( parse(object, ‘d[1].e’) == 6 ) //true
   console.log( parse(object, ‘d.1.e’) == 6 ) //true
   console.log( parse(object, ‘f’) == ‘undefined’ ) //true

   function parse(obj, ins) {
     var tempObj = obj;
     var tempStr = "";
     ins = ins.split("");
     while (ins.length) {
       tempStr = ins.shift();
       console.log(tempStr)
       if (/[^\[\]\.]/.test(tempStr)) {
         tempObj = tempObj[tempStr]
       }
     }
     return tempObj ? tempObj : 'undefined';
   }



