** array.fill
    浅拷贝
   let arr = new Array(3).fill({name: "Mike"});
   arr[0].name = "Ben";
   arr
   // [{name: "Ben"}, {name: "Ben"}, {name: "Ben"}]

   let arr = new Array(3).fill([]);
   arr[0].push(5);
   arr
   // [[5], [5], [5]]


** arr.includes
    [1, 2, 3].includes(2)     // true
    [1, 2, 3].includes(4)     // false
    [1, 2, NaN].includes(NaN) // true
    第二个参数表示搜索的起始位置，默认为0。如果第二个参数为负数，则表示倒数的位置，如果这时它大于数组长度（比如第二个参数为-4，但数组长度为3），则会重置为从0开始。
    const contains = (() =>
      Array.prototype.includes
        ? (arr, value) => arr.includes(value)
        : (arr, value) => arr.some(el => el === value)
    )();


