*** 深入理解javascript中的动态集合——NodeList、HTMLCollection、NamedNodeMap
    https://www.cnblogs.com/xiaohuochai/p/5827389.html


*** range
    https://segmentfault.com/a/1190000009875696


*** 了解DocumentFragment 给我们带来的性能优化
    https://www.cnblogs.com/blueSkys/p/3685740.html


*** node.textContent ——  属性设置或返回指定节点的文本内容，以及它的所有后代的text。
    http://www.w3school.com.cn/jsref/prop_node_textcontent.asp
    <div class="one" id="one">
        <div>nzq <div>d</div></div>
        <div>wx <div>d</div></div>
    </div>
    ======>
    <div class="one" id="one">
        nzq
        <div>nzq</div>
        nzq
        <div>nzq</div>
        nzq
    </div>


*** node.attributes  —— NamedNodeMap
    let attr = document.querySelector("#app").attributes;
    console.log(attr); 如下浏览器打印结果：
    NamedNodeMap {0: id, 1: v-try1, id: id, v-try1: v-try1, length: 2}
    {
        0: id
            baseURI: "http://localhost:63342/%E7%AC%94%E8%AE%B0/vue/%E5%8E%9F%E7%90%86%E7%9B%B8%E5%85%B3/vue%E7%9A%84%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A%E5%8E%9F%E7%90%86%E5%8F%8A%E5%AE%9E%E7%8E%B0/try.html?_ijt=j638bpmf9hht2qj3s7l67guv7"
            childNodes: NodeList []
            firstChild: null
            isConnected: false
            lastChild: null
            localName: "id"
            name: "id"
            namespaceURI: null
            nextSibling: null
            nodeName: "id"
            nodeType: 2
            nodeValue: "app"
            ownerDocument: document
            ownerElement: div#app
            parentElement: null
            parentNode: null
            prefix: null
            previousSibling: null
            specified: true
            textContent: "app"
            value: "app"
            __proto__: Attr
            1: v-try1
            length: 2
            id: id
            v-try1: v-try1
            __proto__: NamedNodeMap
    }


** document.querySelector("**").children ==》 HTMLCollection [**]


** append 和 appendChild 的区别
    ParentNode.append()允许追加  DOMString 对象，而 Node.appendChild() 只接受 Node 对象。
    ParentNode.append() 没有返回值，而 Node.appendChild() 返回追加的 Node 对象。
    ParentNode.append() 可以追加几个节点和字符串，而 Node.appendChild() 只能追加一个节点。
    ———— https://developer.mozilla.org/zh-CN/docs/Web/API/ParentNode/append


** JS获取浏览器窗口大小 获取屏幕，浏览器，网页高度宽度 ———— https://www.cnblogs.com/wujindong/p/5592908.html


** window.scrollTo(x, y)


** document.readySate
    loading / 加载
    document 仍在加载。
    interactive / 互动
    文档已经完成加载，文档已被解析，但是诸如图像，样式表和框架之类的子资源仍在加载。
    complete / 完成
    文档和所有子资源已完成加载。状态表示 load 事件即将被触发。
    当这个属性的值变化时，document 对象上的readystatechange 事件将被触发。


** 获取元素宽高 ———— https://www.cnblogs.com/chengzp/p/cssbox.html
    dom.style.width
    dom.currentStyle.width
    window.getComputedStyle(dom).width
    dom.getBoundingClientRect().width
    dom.offsetWidth



**  document.querySelector("a[target=_blank]")



** radio
    document.querySelector("input[name=nzq]:nth-child(1)").checked = true;

    var radios = document.querySelectorAll("input[name=nzq]");
      for (var i = 0, len = radios.length; i < len; i++) {
        if (radios[i].checked === true) {
          console.log(radios[i].value);break;
        }
      }



** checkbox
    var s = document.querySelectorAll("input[name=chkStudent]");
    var s2 = "";
    for( var i = 0; i < s.length; i++ )
    {
        if ( s[i].checked ){
            s2 += s[i].value+',';
        }
    }



** select
    onchange
    document.querySelector("select option:nth-child(1)").selected = true
     function clasp(){
        window.itemTitle = [];
        var items = document.querySelectorAll("#ventilationParameters option");
        console.log(items);
        //此处取到了每个item，items[i].text则取到的是option中的文字，下面取到的是value属性
        for(var i = 0;i<items.length;i++){
          if (items[i].selected === true) {
            console.log(items[i].value)
            itemTitle[i] = items[i].value;
          }
        }
      }
