** url 解码/编码， 参考地址 ———— https://www.cnblogs.com/z-one/p/6542955.html

    1. escape 和 unescape （不提倡使）
        对除ASCII字母、数字、标点符号 @  *  _  +  -  .  / 以外的其他字符进行编码

    2. encodeURI 和 decodeURI （推荐使用）
        返回编码为有效的统一资源标识符 (URI) 的字符串，不会被编码的字符：! @ # $ & * ( ) = : / ; ? + '
        encodeURI()是Javascript中真正用来对URL编码的函数。

    3. encodeURIComponent 和 decodeURIComponent （推荐使用）
        对URL的组成部分进行个别编码，而不用于对整个URL进行编码
        "; / ? : @ & = + $ , #"，这些在encodeURI()中不被编码的符号，在encodeURIComponent()中统统会被编码，具体的编码规则是和encodeURI函数是一样的
        对需要编码的参数用encodeURIComponent函数最推荐

    4. 细节， 参考地址 ———— https://www.cnblogs.com/xzwblog/p/6932870.html
        （1）. 不同的浏览器可能会有不同的编码方式，不要将编码交给浏览器。应该用JS在前端对URL编码，这样就实现了统一
        （2）. Java的URLEncoder.encode("需要编码的参数","UTF-8")
            使用Javascript先对URL编码，或者将可以在后台编码的参数编码后再发送给前端使用。
        （3）. application/x-www-form-urlencoded (扩展)


** url 里面不能加“ "" '' ”等， 会被认为是内容（如 window.location.href）