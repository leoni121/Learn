** nginx 入门帮助我入门的博客 ———— https://www.jianshu.com/p/801f503cc9ee
    Nginx更擅长于底层服务器端资源的处理（静态资源处理转发、反向代理，负载均衡等），Node.js更擅长于上层具体业务逻辑的处理。




** 作用
    0.代理：代理其实就是在client端和真正的server端之前增加一层提供特定服务的服务器，即代理服务器
	1.正向代理，代理服务器代理用户端的请求（看作客户），
      翻墙：就是客户端和代理服务器可以直接互相访问，属于一个LAN（局域网）；代理对用户是非透明的，即用户需要自己操作或者感知得到自己的请求被发送到代理服务器；代理服务器通过代理用户端的请求来向域外服务器请求响应内容。
	2.反向代理，代理服务器向外部提供统一的代理入口（看作服务器），基本发生在所有的大型网站的页面请求中




**	反向代理最主要的两个原因：
	1.安全及权限。可以看出，使用反向代理后，用户端将无法直接通过请求访问真正的内容服务器，而必须首先通过Nginx。可以通过在Nginx层上将危险或者没有权限的请求内容过滤掉，从而保证了服务器的安全。
	2.负载均衡。例如一个网站的内容被部署在若干台服务器上，可以把这些机子看成一个集群，那么Nginx可以将接收到的客户端请求“均匀地”分配到这个集群中所有的服务器上（内部模块提供了多种负载均衡算法），从而实现服务器压力的负载均衡。
	3.此外，nginx还带有健康检查功能（服务器心跳检查），会定期轮询向集群里的所有服务器发送健康检查请求，来检查集群中是否有服务器处于异常状态，一旦发现某台服务器异常，那么在以后代理进来的客户端请求都不会被发送到该服务器上（直到后面的健康检查发现该服务器恢复正常），从而保证客户端访问的稳定性。




** nodejs 本地服务搭建 ———— http://www.cnblogs.com/shawn-xie/archive/2013/06/06/3121173.html



** 于前端而言的意义
    解决跨域
    适配PC与移动环境
    图片处理




