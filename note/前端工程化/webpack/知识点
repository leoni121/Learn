** webpack4 见 note 文件夹下的MyBlog文件夹下



** webpack 原理 ———— https://segmentfault.com/a/1190000015088834
    如何实现一个简单的webpack
        =》读取文件分析模块依赖
        =》对模块进行解析执行(深度遍历)
        =》针对不同的模块使用相应的loader
        =》编译模块，生成抽象语法树AST。
        =》循环遍历AST树，拼接输出js。



** webpack 打包文件教学 ———— https://www.jianshu.com/p/e24ed38d89fd



** 描述一下index.html 中的运行
    common 得到全局的 webpackJson 该函数相当于把请他模块的 函数给放入 modules这个变量中，所有的模块的函数共有一个modules， 其他的流程和单入口文件一样



** Loader ———— https://segmentfault.com/a/1190000015088834（参考）
    （1）能转换各类资源，并处理成对应模块的加载器。loader 间可以串行使用。
    （2）loader原理
       在解析对于文件，会自动去调用响应的loaderloader 本质上是一个函数，输入参数是一个字符串，输出参数也是一个字符串。当然，输出的参数会被当成是 JS 代码，从而被 esprima 解析成 AST，触发进一步的依赖解析。webpack会按照从右到左的顺序执行loader。



** chunk：code splitting 后的产物，也就是按需加载的分块，装载了不同的 module。




** webpack为什么能把任何形式的资源都视作模块呢？因为loader机制。不同的资源采用不同的loader进行转换。CMD、AMD 、import、css 、等都有相应的loader去进行转换。那为什么我们平时写的es6的模块机制，不用增加import的loader呢。因为我们使用了babel把import转换成了require。
