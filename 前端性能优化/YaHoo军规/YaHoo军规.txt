1.减少 HTTP 请求 （图片合并，js/css合并）
2.使用CDN （最近、最快的距离获取内容）
3.添加Expire/Cache-Control头 （时间值-资源在本地的过期时间，过期缓存时间先关，根据此判断是否重新获取）
4.Gzip 压缩 （浏览器很好的解析）
5.css（层叠样式表单） 放在页面的最上面 （解决 -- 渲染性能、空白《ie》或闪烁<firefox>）
6.script 放最下面
7.避免在css中使用Expressions（不关注，已经不使用了）
8.js、css 提出（复用性、html页面体积-打开快、缓存、可维护性、请求数增加），js、css写页面（无复用时可用、页面不经常访问、脚本/样式少）
9.减少DNS查询 （查询时出现空白，浏览器得不到资源、缓存）
10.最小化js、css（空白格、格式符、注释符、简写方法名/参数名）
11.避免重定向（原始请求诶重新的转向到了其他的请求-301,302）
12.移除重复脚本（见图 重复引用脚本.jpeg）
13.配置实体标签（ETag）{Entity Tag(实体标签)，属于HTTP协议，响应头部中，使用特殊的字符串来标识某个请求资源的版本} 浏览器=》服务器=》有了=》本地
14.ajax 缓存
15. Yslow(YaHoo,分析网站)